rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if request is from Firebase Function
    function isServiceAccount() {
      return request.auth.token.firebase.sign_in_provider == 'custom';
    }

    // Match user documents
    match /users/{userId} {
      // Allow users to create their initial profile and service account to update
      allow create: if true;
      allow update: if isOwner(userId) || isServiceAccount();
      allow read, delete: if isOwner(userId);

      // Match tax data subcollection
      match /taxData/{document=**} {
        // Only allow users to read and write their own tax data
        allow read, write: if isOwner(userId);
      }

      // Match transactions subcollection
      match /transactions/{document=**} {
        // Only allow users to read and write their own transactions
        allow read, write: if isOwner(userId);
      }
    }

    // Match auth_tokens collection
    match /auth_tokens/{publicKey} {
      // Allow service account to write tokens and users to read their own token
      allow write: if isServiceAccount();
      allow read: if true;
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 